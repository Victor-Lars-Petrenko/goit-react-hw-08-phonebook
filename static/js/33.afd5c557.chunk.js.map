{"version":3,"file":"static/js/33.afd5c557.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/Phonebook/ContactForm/ContactForm.module.css?f727","components/Phonebook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Phonebook/Filter/Filter.styled.module.css?ad73","components/Phonebook/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactList/ContactListItem/ContactListItem.module.css?5134","components/Phonebook/ContactList/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactList/ContactList.module.css?f152","components/Phonebook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__xMklr\",\"inputWrap\":\"ContactForm_inputWrap__+Vvxi\",\"label\":\"ContactForm_label__YXYvo\",\"formInput\":\"ContactForm_formInput__mZh8E\",\"formButton\":\"ContactForm_formButton__WtH4A\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport { toast } from 'react-toastify';\nimport { selectContacts } from '../../../redux/contacts/contacts-selectors';\nimport { addContact } from '../../../redux/contacts/contacts-operations';\nimport css from './ContactForm.module.css';\n\nconst formNameId = nanoid();\nconst fornNumberId = nanoid();\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    const isExist = items\n      .map(({ name }) => name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (isExist) {\n      return toast.warning(`${name} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.inputWrap}>\n        <label className={css.label} htmlFor={formNameId}>\n          Name\n        </label>\n        <input\n          className={css.formInput}\n          id={formNameId}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          required\n        />\n      </div>\n      <div className={css.inputWrap}>\n        <label className={css.label} htmlFor={fornNumberId}>\n          Number\n        </label>\n        <input\n          className={css.formInput}\n          id={fornNumberId}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          required\n        />\n      </div>\n      <button className={css.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrapper\":\"Filter_styled_filterWrapper__O4Xib\",\"filterLabel\":\"Filter_styled_filterLabel__lAwSm\",\"filterInput\":\"Filter_styled_filterInput__uaENm\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\n\nimport css from './Filter.styled.module.css';\nimport { setFilter } from '../../../redux/filter/filter-slice';\n\nconst filterId = nanoid();\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const filter = e.currentTarget.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={css.filterWrapper}>\n      <label className={css.filterLabel} htmlFor={filterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={css.filterInput}\n        id={filterId}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__KnjKe\",\"button\":\"ContactListItem_button__McG9M\",\"loaderWrapper\":\"ContactListItem_loaderWrapper__b149z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport { deleteContact } from '../../../../redux/contacts/contacts-operations';\nimport { selectIsLoading } from '../../../../redux/contacts/contacts-selectors';\nimport { Bars } from 'react-loader-spinner';\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ item: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectIsLoading);\n  const [clicked, SetClicked] = useState(false);\n\n  const handleClick = () => {\n    dispatch(deleteContact(id));\n    SetClicked(true);\n  };\n\n  return (\n    <li className={css.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        className={css.button}\n        id={id}\n        type=\"button\"\n        onClick={handleClick}\n      >\n        {!clicked && 'Delete'}\n        {clicked && loading && (\n          <div className={css.loaderWrapper}>\n            <Bars visible={true} width=\"20\" color=\"MidnightBlue\" />\n          </div>\n        )}\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__lyie7\"};","import { useSelector } from 'react-redux';\n\nimport ContactListItem from './ContactListItem';\nimport { selectFilteredContacts } from '../../../redux/contacts/contacts-selectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const items = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.list}>\n      {items.map(item => {\n        return <ContactListItem key={item.id} item={item} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"commonWrapper\":\"Phonebook_commonWrapper__BQ0wo\",\"errorWrapper\":\"Phonebook_errorWrapper__iel7U\",\"loaderWrapper\":\"Phonebook_loaderWrapper__Ku-n8\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport { selectContacts } from '../../redux/contacts/contacts-selectors';\nimport { Bars } from 'react-loader-spinner';\nimport css from './Phonebook.module.css';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.commonWrapper}>\n      <ContactForm />\n\n      <Filter />\n      {isLoading && (\n        <div className={css.loaderWrapper}>\n          <Bars color=\"MidnightBlue\" height=\"40\" width=\"40\" />\n        </div>\n      )}\n      {error && (\n        <h2 className={css.errorWrapper}>\n          Sorry, an error occurred. Please, try again\n        </h2>\n      )}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/Phonebook';\n\nconst PhonebookPage = () => {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilteredContacts","createSelector","filter","normalizedFilter","toLocaleLowerCase","_ref","name","includes","formNameId","nanoid","fornNumberId","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","e","preventDefault","form","currentTarget","value","number","map","toLowerCase","toast","concat","addContact","reset","children","_jsx","htmlFor","id","type","autoComplete","required","filterId","onChange","setFilter","_ref$item","item","loading","_useState","useState","_useState2","_slicedToArray","clicked","SetClicked","onClick","deleteContact","Bars","visible","width","color","ContactListItem","_useSelector","error","useEffect","fetchContacts","ContactForm","Filter","height","ContactList","Phonebook"],"sourceRoot":""}