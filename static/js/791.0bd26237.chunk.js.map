{"version":3,"file":"static/js/791.0bd26237.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","webpack://react-homework-template/./src/components/Phonebook/ContactForm/ContactForm.module.css?f727","redux/contacts/contact-selectors.js","components/Phonebook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Phonebook/Filter/Filter.styled.module.css?ad73","components/Phonebook/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactList/ContactList.module.css?f152","webpack://react-homework-template/./src/components/Phonebook/ContactList/ContactListItem/ContactListItem.module.css?5134","components/Phonebook/ContactList/ContactListItem/ContactListItem.jsx","components/Phonebook/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"commonWrapper\":\"Phonebook_commonWrapper__BQ0wo\",\"errorWrapper\":\"Phonebook_errorWrapper__iel7U\",\"loaderWrapper\":\"Phonebook_loaderWrapper__Ku-n8\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__xMklr\",\"inputWrap\":\"ContactForm_inputWrap__+Vvxi\",\"label\":\"ContactForm_label__YXYvo\",\"formInput\":\"ContactForm_formInput__mZh8E\",\"formButton\":\"ContactForm_formButton__WtH4A\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport css from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\n\nimport { selectContacts } from '../../../redux/contacts/contact-selectors';\nimport { addContact } from '../../../redux/contacts/contacts-operations';\n\nconst formNameId = nanoid();\nconst fornNumberId = nanoid();\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    const isExist = items\n      .map(({ name }) => name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (isExist) {\n      return toast.warning(`${name} is already in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.inputWrap}>\n        <label className={css.label} htmlFor={formNameId}>\n          Name\n        </label>\n        <input\n          className={css.formInput}\n          id={formNameId}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          required\n        />\n      </div>\n      <div className={css.inputWrap}>\n        <label className={css.label} htmlFor={fornNumberId}>\n          Number\n        </label>\n        <input\n          className={css.formInput}\n          id={fornNumberId}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          required\n        />\n      </div>\n      <button className={css.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrapper\":\"Filter_styled_filterWrapper__O4Xib\",\"filterLabel\":\"Filter_styled_filterLabel__lAwSm\",\"filterInput\":\"Filter_styled_filterInput__uaENm\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\n\nimport css from './Filter.styled.module.css';\nimport { setFilter } from '../../../redux/filter/filter-slice';\n\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const filter = e.currentTarget.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={css.filterWrapper}>\n      <label className={css.filterLabel} htmlFor={filterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={css.filterInput}\n        id={filterId}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__lyie7\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__KnjKe\",\"button\":\"ContactListItem_button__McG9M\"};","import { useDispatch } from 'react-redux';\n\nimport css from './ContactListItem.module.css';\nimport { deleteContact } from '../../../../redux/contacts/contacts-operations';\n\nexport const ContactListItem = ({ item: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={css.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        className={css.button}\n        id={id}\n        type=\"button\"\n        onClick={handleClick}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport css from './ContactList.module.css';\nimport { ContactListItem } from './ContactListItem';\nimport { selectFilteredContacts } from '../../../redux/contacts/contact-selectors';\n\nexport const ContactList = () => {\n  const items = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.list}>\n      {items.map(item => {\n        return <ContactListItem key={item.id} item={item} />;\n      })}\n    </ul>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport css from './Phonebook.module.css';\nimport { ContactForm } from './ContactForm';\nimport { Filter } from './Filter';\nimport { ContactList } from './ContactList';\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport { selectContacts } from '../../redux/contacts/contact-selectors';\n\nimport { Bars } from 'react-loader-spinner';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.commonWrapper}>\n      <ContactForm />\n\n      <Filter />\n      {isLoading && (\n        <div className={css.loaderWrapper}>\n          <Bars color=\"MidnightBlue\" height=\"40\" width=\"40\" />\n        </div>\n      )}\n      {error && (\n        <h2 className={css.errorWrapper}>\n          Sorry, an error occurred. Please, try again\n        </h2>\n      )}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/Phonebook/Phonebook';\n\nconst PhonebookPage = () => {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["selectContacts","state","contacts","items","selectFilteredContacts","createSelector","filter","normalizedFilter","toLocaleLowerCase","_ref","name","includes","formNameId","nanoid","fornNumberId","ContactForm","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","e","preventDefault","form","currentTarget","value","number","map","toLowerCase","toast","concat","addContact","reset","children","_jsx","htmlFor","id","type","autoComplete","required","filterId","Filter","onChange","setFilter","ContactListItem","_ref$item","item","onClick","deleteContact","ContactList","_useSelector","isLoading","error","useEffect","fetchContacts","Bars","color","height","width","Phonebook"],"sourceRoot":""}